"""Add role

Revision ID: fbf8594977a1
Revises: 6e5df125e491
Create Date: 2025-01-31 23:46:22.952006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fbf8594977a1'
down_revision: Union[str, None] = '6e5df125e491'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### Create the Enum type first ###
    op.execute("""
    CREATE TYPE userrole AS ENUM ('student', 'teacher', 'admin');
    """)
    
    # ### Add the 'role' column with the defined Enum type ###
    op.add_column('users', sa.Column('role', sa.Enum('student', 'teacher', 'admin', name='userrole'), nullable=False, server_default='student'))
    
    # Dropping the 'email' index (this is usually because we're modifying the column)
    op.drop_index('ix_users_email', table_name='users')

    # If you're keeping the 'email' and 'full_name' columns, do not drop them:
    # op.drop_column('users', 'full_name')
    # op.drop_column('users', 'email')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Restoring 'email' and 'full_name' columns (if dropped previously)
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    
    # Creating the index again for 'email'
    op.create_index('ix_users_email', 'users', ['email'], unique=True)

    # Dropping the 'role' column during downgrade
    op.drop_column('users', 'role')
    
    # Dropping the Enum type during downgrade
    op.execute("DROP TYPE IF EXISTS userrole;")
    
    # ### end Alembic commands ###
